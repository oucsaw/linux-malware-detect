#!/bin/bash
#
##
# Linux Malware Detect v1.5
#             (C) 2002-2015, R-fx Networks <proj@r-fx.org>
#             (C) 2015, Ryan MacDonald <ryan@r-fx.org>
# This program may be freely redistributed under the terms of the GNU GPL v2
##
#

maldet_log="${logdir}/event_log"
clamscan_log="$logdir/clamscan_log"
datestamp=`date +"%y%m%d-%H%M"`

wget_timeout="5"
wget_retries="3"
wget=/usr/bin/wget

md5sum=/usr/bin/md5sum

hostid=$(/usr/bin/hostid | ${md5sum} | awk '{print$1}')
storename_prefix="$hostid.$RANDOM"

od=/usr/bin/od
find=/usr/bin/find
perl=/usr/bin/perl
nice=/usr/bin/nice
ionice=/usr/bin/ionice
wc=/usr/bin/wc
mail=/usr/bin/mail
pidof=/bin/pidof
stat=/usr/bin/stat
logger=/usr/bin/logger

suppress_cleanhit="$email_ignore_clean"
ignore_paths="${varbase}/ignore_paths"
ignore_sigs="${varbase}/ignore_sigs"
ignore_inotify="${varbase}/ignore_inotify"
ignore_file_ext="${varbase}/ignore_file_ext"
quardir="${varbase}/quarantine"
sessdir="${varbase}/sess"
sigdir="${varbase}/sigs"
cldir="${varbase}/clean"
tmpdir="${varbase}/tmp"

sig_version_file="$sigdir/maldet.sigs.ver"
if [ -f "$sig_version_file" ]; then
	sig_version=`cat $sig_version_file`
fi
sig_version_url="http://cdn.rfxn.com/downloads/maldet.sigs.ver"
sig_sigpack_url="http://cdn.rfxn.com/downloads/maldet-sigpack.tgz"
sig_clpack_url="http://cdn.rfxn.com/downloads/maldet-cleanv2.tgz"

sig_md5_file="$sigdir/md5v2.dat"
sig_hex_file="$sigdir/hex.dat"
sig_cav_hex_file="$sigdir/rfxn.ndb"
sig_cav_md5_file="$sigdir/rfxn.hdb"
sig_cust_md5_file="$sigdir/custom.md5.dat"
sig_cust_hex_file="$sigdir/custom.hex.dat"

lmd_versionsion_file="${varbase}/VERSION"
lmd_version="$ver"
lmd_referer="LMD:$ver:$hostid"
lmd_hash_file="${varbase}/VERSION.hash"
lmd_hash_url="http://cdn.rfxn.com/downloads/maldet.current.hash.beta"
lmd_version_url="http://www.rfxn.com/downloads/maldet.current.ver.beta"

clamav_paths="/usr/local/cpanel/3rdparty/share/clamav/ /var/lib/clamav/ /var/clamav/ /usr/share/clamav/ /usr/local/share/clamav"
tlog="${sharebase}/lib/internals/tlog"
inotify=`which inotifywait 2> /dev/null`
inotify_log="${logdir}/inotify_log"
inotify_user_instances=128
inotify_trim=150000
hex_fifo_path="${varrundir}/hexfifo"
hex_fifo_script="${sharebase}/lib/internals/hexfifo.pl"
hex_string_script="${sharebase}/lib/internals/hexstring.pl"
scan_user_access_minuid=40
find_opts="-regextype posix-egrep"
email_template="${sharebase}/lib/internals/scan.etpl"
email_subj="maldet alert from $(hostname)"

## backwards compatibility for pre-1.5 deprecated config options
if [ ! "$quarantine_hits" ] && [ "$quar_hits" ]; then
       quarantine_hits="$quar_hits"
fi
if [ ! "$quarantine_clean" ] && [ "$quar_clean" ]; then
       quarantine_clean="$quar_clean"
fi
if [ ! "$quarantine_suspend_user" ] && [ "$quar_susp" ]; then
       quarantine_suspend_user="$quar_susp"
fi
if [ ! "$quarantine_suspend_user_minuid" ] && [ "$quar_susp_minuid" ]; then
       quarantine_suspend_user_minuid="$quar_susp_minuid"
fi
if [ ! "$scan_max_depth" ] && [ "$maxdepth" ]; then
       scan_max_depth="$maxdepth"
fi
if [ ! "$scan_min_filesize" ] && [ "$minfilesize" ]; then
       scan_min_filesize="$minfilesize"
fi
if [ ! "$scan_max_filesize" ] && [ "$maxfilesize" ]; then
       scan_max_filesize="$maxfilesize"
fi
if [ ! "$scan_hexdepth" ] && [ "$hexdepth" ]; then
       scan_hexdepth="$hexdepth"
fi
if [ ! "$scan_hexfifo" ] && [ "$hex_fifo_scan" ]; then
       scan_hexfifo="$hex_fifo_scan"
fi
if [ ! "$scan_hexfifo_depth" ] && [ "$hex_fifo_depth" ]; then
       scan_hexfifo_depth="$hex_fifo_depth"
fi
if [ ! "$scan_clamscan" ] && [ "$clamav_scan" ]; then
       scan_clamscan="$clamav_scan"
fi
if [ ! "$scan_tmpdir_paths" ] && [ "$tmpdir_paths" ]; then
       scan_tmpdir_paths="$tmpdir_paths"
fi
if [ ! "$scan_user_access" ] && [ "$public_scan" ]; then
       scan_user_access="$public_scan"
fi
if [ ! "$scan_user_access_minuid" ] && [ "$pubuser_minuid" ]; then
       scan_user_access_minuid="$pubuser_minuid"
fi
if [ ! "$scan_cpunice" ] && [ "$scan_nice" ]; then
       scan_cpunice="$scan_nice"
fi
if [ ! "$inotify_sleep" ] && [ "$inotify_stime" ]; then
       inotify_sleep="$inotify_stime"
fi
if [ ! "$inotify_docroot" ] && [ "$inotify_webdir" ]; then
       inotify_docroot="$inotify_webdir"
fi
if [ ! "$inotify_cpunice" ] && [ "$inotify_nice" ]; then
       inotify_cpunice="$inotify_nice"
fi
if [ ! "$sig_version_file" ] && [ "$def_verf" ]; then
       sig_version_file="$def_verf"
fi
if [ ! "$sig_version_url" ] && [ "$defurl_ver" ]; then
       sig_version_url="$defurl_ver"
fi
if [ ! "$sig_version" ] && [ "$def_ver" ]; then
       sig_version="$def_ver"
fi
if [ ! "$sig_sigpack_url" ] && [ "$defurl_sigpack" ]; then
       sig_sigpack_url="$defurl_sigpack"
fi
if [ ! "$sig_clpack_url" ] && [ "$defurl_clpack" ]; then
       sig_clpack_url="$defurl_clpack"
fi
if [ ! "$sig_md5_file" ] && [ "$dat_md5hash" ]; then
       sig_md5_file="$dat_md5hash"
fi
if [ ! "$sig_hex_file" ] && [ "$dat_hexstring" ]; then
       sig_hex_file="$dat_hexstring"
fi
if [ ! "$sig_cav_hex_file" ] && [ "$dat_hex_cav" ]; then
       sig_cav_hex_file="$dat_hex_cav"
fi
if [ ! "$sig_cav_md5_file" ] && [ "$dat_md5_cav" ]; then
       sig_cav_md5_file="$dat_md5_cav"
fi
if [ ! "$sig_cust_md5_file" ] && [ "$custdat_md5hash" ]; then
       sig_cust_md5_file="$custdat_md5hash"
fi
if [ ! "$sig_cust_hex_file" ] && [ "$custdat_hexstring" ]; then
       sig_cust_hex_file="$custdat_hexstring"
fi
if [ ! "$lmd_version_file" ] && [ "$lmd_verf" ]; then
       lmd_version_file="$lmd_verf"
fi
if [ ! "$lmd_version" ] && [ "$lmd_ver" ]; then
       lmd_version="$lmd_ver"
fi
if [ ! "$lmd_hash_file" ] && [ "$lmd_hashf" ]; then
       lmd_hash_file="$lmd_hashf"
fi
if [ ! "$lmd_hash_url" ] && [ "$lmdurl_hash" ]; then
       lmd_hash_url="$lmdurl_hash"
fi
if [ ! "$lmd_version_url" ] && [ "$lmdurl_ver" ]; then
       lmd_version_url="$lmdurl_ver"
fi
if [ ! "$hex_fifo_path" ] && [ "$hex_fifo" ]; then
       hex_fifo_path="$hex_fifo"
fi
if [ ! "$hex_string_script" ] && [ "$hexm_pl" ]; then
       hex_string_script="$hexm_pl"
fi
if [ ! "$hex_fifo_script" ] && [ "$hexmfifo_pl" ]; then
       hex_fifo_script="$hexmfifo_pl"
fi
